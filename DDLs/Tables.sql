-- Drop table

-- DROP TABLE hue."user";

CREATE TABLE hue."user" (
	user_nm varchar(32) NOT NULL,
	pass_tx varchar(64) NOT NULL,
	artist_in bool DEFAULT false NULL,
	CONSTRAINT pk_user PRIMARY KEY (user_nm)
);

-- hue.artist definition

-- Drop table

-- DROP TABLE hue.artist;

CREATE TABLE hue.artist (
	artist_id int4 GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	artist_nm varchar(32) NULL,
	artist_social_tx text NULL,
	artist_comm_sheet_tx text NULL,
	user_nm varchar(32) NULL,
	artist_img_bytes bytea NULL,
	artist_img_mime_tx varchar NULL,
	artist_img_present_in bool GENERATED ALWAYS AS (artist_img_bytes IS NOT NULL AND length(artist_img_bytes) > 0) STORED NULL,
	retired_in bool DEFAULT false NULL,
	CONSTRAINT pk_artist PRIMARY KEY (artist_id),
	CONSTRAINT fk_artist_owner FOREIGN KEY (user_nm) REFERENCES hue."user"(user_nm)
);


-- hue.char_cat definition

-- Drop table

-- DROP TABLE hue.char_cat;

CREATE TABLE hue.char_cat (
	char_cat_id int4 GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	char_cat_nm varchar(32) NOT NULL,
	char_cat_desc_tx text NULL,
	char_cat_color_tx varchar(32) NULL,
	user_nm varchar(32) NULL,
	CONSTRAINT pk_char_cat PRIMARY KEY (char_cat_id),
	CONSTRAINT fk_char_cat_owner FOREIGN KEY (user_nm) REFERENCES hue."user"(user_nm)
);


-- hue.comm definition

-- Drop table

-- DROP TABLE hue.comm;

CREATE TABLE hue.comm (
	comm_id int4 GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	comm_nm varchar(128) NULL,
	comm_desc_tx text NULL,
	comm_price_nb int4 NULL,
	comm_char_cnt int4 NULL,
	comm_post_tags_tx text NULL,
	comm_post_desc_tx text NULL,
	comm_status_cd int4 NULL,
	comm_type_cd int4 NULL,
	cre_ts timestamp(6) NOT NULL,
	updt_ts timestamp(6) NULL,
	artist_id int4 NULL,
	user_nm varchar(32) NULL,
	comm_header_img_bytes bytea NULL,
	comm_header_img_mime_tx varchar NULL,
	comm_started_in bool GENERATED ALWAYS AS (comm_status_cd > 1) STORED NULL,
	start_dt date NULL,
	done_dt date NULL,
	pblsh_dt date NULL,
	comm_year_nb int4 GENERATED ALWAYS AS (EXTRACT(year FROM COALESCE(start_dt, cre_ts::date))) STORED NULL,
	comm_ttc_nb int4 GENERATED ALWAYS AS (
        CASE
            WHEN done_dt IS NOT NULL AND start_dt IS NOT NULL THEN done_dt - start_dt
            ELSE NULL::integer
        END) STORED NULL,
	comm_month_nb int4 GENERATED ALWAYS AS (EXTRACT(month FROM COALESCE(start_dt, cre_ts::date))) STORED NULL,
	comm_post_url_tx varchar NULL,
	comm_header_img_present_in bool GENERATED ALWAYS AS (comm_header_img_bytes IS NOT NULL AND length(comm_header_img_bytes) > 0) STORED NULL,
	CONSTRAINT pk_comm PRIMARY KEY (comm_id),
	CONSTRAINT fk_comm_artist FOREIGN KEY (artist_id) REFERENCES hue.artist(artist_id),
	CONSTRAINT fk_comm_owner FOREIGN KEY (user_nm) REFERENCES hue."user"(user_nm)
);


-- hue.comm_tag definition

-- Drop table

-- DROP TABLE hue.comm_tag;

CREATE TABLE hue.comm_tag (
	comm_tag_id int4 GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	comm_tag_nm varchar(64) NULL,
	comm_tag_desc_tx text NULL,
	comm_tag_color_tx varchar(32) NULL,
	user_nm varchar(32) NULL,
	CONSTRAINT pk_comm_tag PRIMARY KEY (comm_tag_id),
	CONSTRAINT comm_tag_user_fk FOREIGN KEY (user_nm) REFERENCES hue."user"(user_nm)
);


-- hue.comm_tag_map definition

-- Drop table

-- DROP TABLE hue.comm_tag_map;

CREATE TABLE hue.comm_tag_map (
	comm_id int4 NULL,
	comm_tag_id int4 NULL,
	CONSTRAINT fk_comm_tag_map_comm FOREIGN KEY (comm_id) REFERENCES hue.comm(comm_id),
	CONSTRAINT fk_comm_tag_map_tag FOREIGN KEY (comm_tag_id) REFERENCES hue.comm_tag(comm_tag_id)
);


-- hue.char definition

-- Drop table

-- DROP TABLE hue.char;

CREATE TABLE hue.char (
	char_id int4 GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	char_nm varchar(32) NOT NULL,
	char_species_tx text NOT NULL,
	char_desc_tx text NULL,
	char_color_tx varchar(32) NULL,
	user_nm varchar(32) NULL,
	char_img_bytes bytea NULL,
	char_img_mime_tx varchar NULL,
	char_cat_id int4 NULL,
	primary_char_in bool NULL,
	char_img_present_in bool GENERATED ALWAYS AS (char_img_bytes IS NOT NULL AND length(char_img_bytes) > 0) STORED NULL,
	retired_in bool DEFAULT false NULL,
	CONSTRAINT pk_char PRIMARY KEY (char_id),
	CONSTRAINT fk_char_cat FOREIGN KEY (char_cat_id) REFERENCES hue.char_cat(char_cat_id),
	CONSTRAINT fk_char_owner FOREIGN KEY (user_nm) REFERENCES hue."user"(user_nm)
);


-- hue.comm_char_map definition

-- Drop table

-- DROP TABLE hue.comm_char_map;

CREATE TABLE hue.comm_char_map (
	comm_id int4 NULL,
	char_id int4 NULL,
	CONSTRAINT fk_comm_char_map_char FOREIGN KEY (char_id) REFERENCES hue.char(char_id),
	CONSTRAINT fk_comm_char_map_comm FOREIGN KEY (comm_id) REFERENCES hue.comm(comm_id)
);


